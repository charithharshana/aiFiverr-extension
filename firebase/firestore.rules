rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userEmail) {
      return isAuthenticated() && request.auth.token.email == userEmail;
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.token.email == resource.data.email || 
         request.auth.token.email == request.resource.data.email);
    }
    
    // Prompts collection - users can read/write their own prompts
    match /prompts/{promptId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.token.email == resource.data.userEmail || 
         request.auth.token.email == request.resource.data.userEmail);
    }
    
    // Variables collection - users can read/write their own variables
    match /variables/{variableId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.token.email == resource.data.userEmail || 
         request.auth.token.email == request.resource.data.userEmail);
    }
    
    // Conversations collection - users can read/write their own conversations
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.token.email == resource.data.userEmail || 
         request.auth.token.email == request.resource.data.userEmail);
    }
    
    // Knowledge base collection - users can read/write their own knowledge base files
    match /knowledge_base/{kbId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.token.email == resource.data.userEmail || 
         request.auth.token.email == request.resource.data.userEmail);
    }
  }
}
