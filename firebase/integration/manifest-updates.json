{
  "manifest_updates_required": {
    "description": "Required updates to manifest.json for Firebase Firestore integration",
    "content_scripts": [
      {
        "matches": ["*://www.fiverr.com/*", "*://fiverr.com/*"],
        "js": [
          "firebase/database/firebase-database-service.js",
          "firebase/services/user-data-service.js"
        ],
        "run_at": "document_start"
      }
    ],
    "web_accessible_resources": [
      {
        "resources": [
          "firebase/examples/firestore-usage-examples.js",
          "firebase/tests/firestore-integration-test.js"
        ],
        "matches": ["*://www.fiverr.com/*", "*://fiverr.com/*"]
      }
    ],
    "permissions_already_included": [
      "storage",
      "identity",
      "offscreen"
    ],
    "host_permissions_already_included": [
      "https://firestore.googleapis.com/*",
      "https://www.googleapis.com/*"
    ]
  },
  "popup_html_updates": {
    "description": "Add bio and language fields to popup settings",
    "new_fields": [
      {
        "section": "User Profile",
        "fields": [
          {
            "type": "textarea",
            "id": "userBio",
            "label": "Professional Bio",
            "placeholder": "Describe your professional background and expertise...",
            "maxlength": 500
          },
          {
            "type": "select",
            "id": "userLanguage", 
            "label": "Preferred Language",
            "options": [
              {"value": "en-US", "text": "English (US)"},
              {"value": "en-GB", "text": "English (UK)"},
              {"value": "es-ES", "text": "Spanish"},
              {"value": "fr-FR", "text": "French"},
              {"value": "de-DE", "text": "German"},
              {"value": "it-IT", "text": "Italian"},
              {"value": "pt-BR", "text": "Portuguese (Brazil)"},
              {"value": "ja-JP", "text": "Japanese"},
              {"value": "ko-KR", "text": "Korean"},
              {"value": "zh-CN", "text": "Chinese (Simplified)"}
            ]
          }
        ]
      }
    ]
  },
  "css_updates": {
    "description": "CSS styles for new bio and language fields",
    "styles": {
      ".user-profile-section": {
        "margin-top": "20px",
        "padding": "15px",
        "border": "1px solid #e0e0e0",
        "border-radius": "8px",
        "background-color": "#f9f9f9"
      },
      ".user-profile-section h3": {
        "margin-top": "0",
        "color": "#333",
        "font-size": "16px"
      },
      "#userBio": {
        "width": "100%",
        "min-height": "80px",
        "padding": "8px",
        "border": "1px solid #ddd",
        "border-radius": "4px",
        "font-family": "inherit",
        "resize": "vertical"
      },
      "#userLanguage": {
        "width": "100%",
        "padding": "8px",
        "border": "1px solid #ddd",
        "border-radius": "4px"
      }
    }
  },
  "javascript_integration": {
    "description": "JavaScript code to integrate bio and language fields",
    "popup_js_additions": [
      {
        "function": "loadUserProfile",
        "code": "async loadUserProfile() {\n  try {\n    if (window.userDataService) {\n      const userEmail = await this.getCurrentUserEmail();\n      if (userEmail) {\n        const preferences = await window.userDataService.getPreferences(userEmail);\n        document.getElementById('userBio').value = preferences.bio || '';\n        document.getElementById('userLanguage').value = preferences.language || 'en-US';\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load user profile:', error);\n  }\n}"
      },
      {
        "function": "saveUserProfile", 
        "code": "async saveUserProfile() {\n  try {\n    if (window.userDataService) {\n      const userEmail = await this.getCurrentUserEmail();\n      if (userEmail) {\n        const bio = document.getElementById('userBio').value;\n        const language = document.getElementById('userLanguage').value;\n        \n        await window.userDataService.updateBio(userEmail, bio);\n        await window.userDataService.updateLanguage(userEmail, language);\n        \n        this.showToast('Profile updated successfully');\n      }\n    }\n  } catch (error) {\n    console.error('Failed to save user profile:', error);\n    this.showToast('Failed to save profile', 'error');\n  }\n}"
      }
    ],
    "event_listeners": [
      "document.getElementById('userBio')?.addEventListener('blur', () => this.saveUserProfile());",
      "document.getElementById('userLanguage')?.addEventListener('change', () => this.saveUserProfile());"
    ]
  },
  "testing_instructions": {
    "description": "How to test the Firebase Firestore implementation",
    "steps": [
      {
        "step": 1,
        "action": "Load extension in Chrome",
        "details": "Ensure all new files are included in the extension"
      },
      {
        "step": 2,
        "action": "Open browser console",
        "details": "Navigate to any Fiverr page and open developer tools"
      },
      {
        "step": 3,
        "action": "Run connection test",
        "details": "Execute: await window.userDataService.testConnection()"
      },
      {
        "step": 4,
        "action": "Run integration tests",
        "details": "Execute: await window.firestoreIntegrationTest.runAllTests()"
      },
      {
        "step": 5,
        "action": "Test user authentication",
        "details": "Sign in through extension popup and verify user data storage"
      },
      {
        "step": 6,
        "action": "Test preferences updates",
        "details": "Change settings in popup and verify Firebase storage"
      },
      {
        "step": 7,
        "action": "Test bio and language",
        "details": "Update bio and language fields, verify in Firestore console"
      },
      {
        "step": 8,
        "action": "Test cross-browser sync",
        "details": "Sign in from different browser, verify data consistency"
      }
    ]
  },
  "firestore_console_verification": {
    "description": "How to verify data in Firebase Console",
    "url": "https://console.firebase.google.com/project/ai-fiverr/firestore",
    "collections_to_check": [
      {
        "collection": "users",
        "document_format": "user_email_com",
        "expected_fields": [
          "email", "name", "picture", "created", "lastLogin", "preferences"
        ]
      },
      {
        "collection": "variables", 
        "document_format": "user_email_com_variables",
        "expected_fields": ["userEmail", "variables", "timestamp"]
      },
      {
        "collection": "conversations",
        "document_format": "user_email_com_conversationId", 
        "expected_fields": ["userEmail", "conversationId", "data", "timestamp"]
      }
    ]
  },
  "troubleshooting": {
    "common_issues": [
      {
        "issue": "User data service not available",
        "solution": "Ensure firebase/services/user-data-service.js is loaded in content script"
      },
      {
        "issue": "Firestore permission denied",
        "solution": "Check Firebase Authentication status and Firestore security rules"
      },
      {
        "issue": "Preferences not saving",
        "solution": "Verify access token is valid and user is authenticated"
      },
      {
        "issue": "Cross-browser sync not working",
        "solution": "Ensure user is signed in with same Google account on both browsers"
      }
    ]
  }
}
